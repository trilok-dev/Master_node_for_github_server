name: Dynamic Runner Based on Specified File
on:
  workflow_dispatch:
    inputs:
      target_file:
        description: 'Enter the file to read execution_env from (e.g., script.py)'
        required: true
        default: 'script.py'

jobs:
  read_env:
    runs-on: ubuntu-latest
    outputs:
      env_value: ${{ steps.get_env.outputs.env_value }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Read execution_env from specified file
        id: get_env
        run: |
          echo "Reading from: ${{ github.event.inputs.target_file }}"
          # Extract the value using grep and sed
          value=$(grep execution_env "${{ github.event.inputs.target_file }}" | sed -E 's/.*execution_env\s*=\s*[\"\x27]?([^\"\x27]+)[\"\x27]?.*/\1/')
          echo "Extracted value: $value"
          if [ -z "$value" ]; then
            echo "Error: execution_env not found in file"
            exit 1
          fi
          echo "env_value=$value" >> $GITHUB_OUTPUT

  run_job:
    needs: read_env
    # strategy:
      # matrix:
      #   os: [Linux_WB_CI_POC,Window_WB_CI_PoC]
    # if: needs.read_env.outputs.env_value == matrix.os
    runs-on: ${{ needs.read_env.outputs.env_value }}
    steps:
      - name: Echo execution env
        run: echo "Running on execution_env=${{ needs.read_env.outputs.env_value }}"
